startup-utils-set-paths() {
  if [[ -n ${ZSH_VERSION:-} ]]; then
    emulate -L zsh
    setopt null_glob
  fi

  local -a base_paths
  local base_path
  local adding_path

  # Initialize PATH and MANPATH using `path_helper`, if it exists.
  if [[ -x /usr/libexec/path_helper ]]; then
    # `path_helper` needs `PATH` or `MANPATH` environment variables to assign
    # values.
    export PATH=$PATH
    export MANPATH=$MANPATH
    eval "$(/usr/libexec/path_helper -s)"
  fi

  # The order is matter here.
  base_paths=()
  # FIXME: This is too much platform specific.
  base_paths+=(/usr/local /opt/homebrew)
  for base_path in /usr/local/*; do
    if [[ -L $base_path ]]; then
      base_paths+=($base_path)
    fi
  done
  for base_path in /opt/local/*; do
    if [[ -L $base_path ]]; then
      base_paths+=($base_path)
    fi
  done
  base_paths+=("$@")
  readonly base_paths

  for base_path in "${base_paths[@]}"; do
    if [[ -e $base_path ]]; then
      adding_path="$base_path/bin"
      if [[ -d $adding_path ]]; then
        PATH=$adding_path:$PATH
      fi
      adding_path="$base_path/sbin"
      if [[ -d $adding_path ]]; then
        PATH=$adding_path:$PATH
      fi
      adding_path="$base_path/share/man"
      if [[ -d $adding_path ]]; then
        MANPATH=$adding_path:$MANPATH
      fi
    fi
  done

  export PATH
  export MANPATH
}

startup-utils-set-paths "$@"
