#!/bin/sh

if [[ $# -ne 2 ]]; then
  echo "Usage: $0 source.mp4 dest.gif"
  echo "START_TIME=[HH:]MM:SS[.m]"
  echo "DURATION=s"
  echo "FRAME_DURATION_SCALE=1.0 (default)"
  echo "SIZE=320 (defualt)"
  exit 0
fi

readonly SIZE=${SIZE:-"320"}
# Time in `[HH:]MM:SS[.m]` format. See ffmpeg-utils(1).
readonly START_TIME_FLAG=${START_TIME:+"-ss $START_TIME"}
readonly DURATION_FLAG=${DURATION:+"-t $DURATION"}
# A scale of presentation timestamp of each frame. See ffmepg(1).
readonly FRAME_DURATION_SCALE=${FRAME_DURATION_SCALE:-"1.0"}

readonly SOURCE=$1
readonly DEST=$2
readonly PALETTE="$SOURCE.palette.png"
readonly FILTERS="fps=15,scale=$SIZE:-1:flags=lanczos,setpts=$FRAME_DURATION_SCALE*PTS"

if [[ ! -e $PALETTE ]]; then
  echo "Create $PALETTE..."
  ffmpeg \
    $START_TIME_FLAG \
    $DURATION_FLAG \
    -i "$SOURCE" \
    -vf "$FILTERS,palettegen" \
    -y \
    "$PALETTE" || {
    echo "Fail to create $PALETTE"
    exit 1
  }
fi

echo "Create $DEST..."
ffmpeg \
  $START_TIME_FLAG \
  $DURATION_FLAG \
  -i "$SOURCE" \
  -i "$PALETTE" \
  -lavfi "$FILTERS [x]; [x][1:v] paletteuse" \
  -y \
  "$DEST" || {
  echo "Fail to create $DEST"
  exit 1
}
