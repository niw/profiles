# Source common `~/.lldbinit`.
# Man page `lldb(1)` doesn't clearly mention that it reads `~/.lldbinit` after reading
# `~/.lldbinit-$debugger` like `~/.lldbinit-Xcode`, but in fact that it's not reading it.
# To read common LLDB configuration, source it here.
command source "~/.lldbinit"

# Reveal
command script import "~/Library/Application Support/Reveal/RevealLLDBCommands/reveallldb"
# Set a one-shot breakpoint on `UIApplicationMain` to install Reveal on the debugging process.
# NOTE: Somehow if it has `--one-shot`, this doesn't work as expected.
breakpoint set --name UIApplicationMain
# Add a breakpoint command to the last breakpoint set.
# This should be executed as a python script with `lldb.debugger.HandleCommand()`,
# otherwise Xcode will freeze.
breakpoint command add --stop-on-error true --script-type python
for command in ["reveal load", "reveal start", "process continue"] if frame.thread.process.target.platform.GetName() == "ios-simulator" else ["process continue"]:
  lldb.debugger.HandleCommand(command)
DONE

# Experimental settings for Xcode.
# See <https://forums.swift.org/t/lldb-is-slow-to-resolve-local-vars/32517/21> for details.
settings set target.experimental.swift-create-module-contexts-in-parallel false
